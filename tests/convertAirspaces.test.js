const { YaixmConverter } = require('../src/yaixm-converter');

// TODO add more tests

describe('test parsing complete valid airspace definition blocks to GeoJSON', () => {
    test('read single airspace with linked ground service', async () => {
        const inputFilepath = './tests/fixtures/airspace-single-arc-clockwise.yaml';
        const serviceFilePath = './tests/fixtures/service.yaml';
        const expectedGeojson = {
            type: 'FeatureCollection',
            features: [
                {
                    type: 'Feature',
                    properties: {
                        name: 'ABERDEEN CTA',
                        type: 'CTA',
                        class: 'D',
                        upperCeiling: {
                            value: 115,
                            unit: 'FL',
                            referenceDatum: 'STD',
                        },
                        lowerCeiling: {
                            value: 1500,
                            unit: 'FT',
                            referenceDatum: 'MSL',
                        },
                        activity: 'NONE',
                        activatedByNotam: false,
                        groundService: {
                            callsign: 'ABERDEEN APPROACH',
                            frequency: '119.055',
                        },
                    },
                    geometry: {
                        type: 'Polygon',
                        coordinates: [
                            [
                                [-1.976388888888889, 57.36472222222223],
                                [-1.976137616714953, 57.36476961917806],
                                [-1.9802991675959791, 57.370807651093656],
                                [-1.9879760659605967, 57.38041743226575],
                                [-1.996761391649096, 57.38974779912101],
                                [-2.0066210921411005, 57.39876170204563],
                                [-2.017516764723316, 57.407423321120795],
                                [-2.0294057997460255, 57.415698211370994],
                                [-2.0422415423557094, 57.42355344283904],
                                [-2.055973472176495, 57.43095773486922],
                                [-2.0705474003105264, 57.43788158399978],
                                [-2.0859056829255787, 57.444297384888955],
                                [-2.1019874505983895, 57.45017954372469],
                                [-2.1187288524851353, 57.45550458359893],
                                [-2.1360633142972523, 57.46025124135936],
                                [-2.153921808972419, 57.46440055548846],
                                [-2.172233138847795, 57.467935944598345],
                                [-2.1909242280666392, 57.47084327617194],
                                [-2.2099204238808636, 57.47311092522494],
                                [-2.229145805451892, 57.47472982261007],
                                [-2.248523498700921, 57.475693492732844],
                                [-2.267975995718022, 57.47599808049859],
                                [-2.287425477207954, 57.47564236736153],
                                [-2.306794136429426, 57.47462777639861],
                                [-2.3260045030741225, 57.47295836638407],
                                [-2.344979765532248, 57.47064081489283],
                                [-2.3636440900025737, 57.46768439051417],
                                [-2.381922934926929, 57.46410091430869],
                                [-2.399743359261462, 57.45990471069301],
                                [-2.41703432313939, 57.455112547986516],
                                [-2.4337269795319627, 57.44974356890257],
                                [-2.4497549555752194, 57.443819211313105],
                                [-2.4650546222992875, 57.437363119659345],
                                [-2.4795653515735006, 57.43040104742332],
                                [-2.4932297591638046, 57.422960751113585],
                                [-2.5059939328877086, 57.41507187625415],
                                [-2.5178076449456137, 57.406765835899044],
                                [-2.5286245476046156, 57.398075682223855],
                                [-2.5384023515109613, 57.38903597177236],
                                [-2.5471029860091505, 57.379682624958456],
                                [-2.554692740948369, 57.370052780443615],
                                [-2.5611423895595182, 57.360184645024944],
                                [-2.56642729208772, 57.350117339682335],
                                [-2.5655555555555556, 57.35],
                                [-1.9672222222222224, 57.35],
                                [-1.976388888888889, 57.36472222222223],
                            ],
                        ],
                    },
                },
            ],
        };

        const converter = new YaixmConverter({ fixGeometries: true, strictSchemaValidation: true });
        await converter.convertFromFile(inputFilepath, { type: 'airspace', serviceFilePath });
        const geojson = converter.toGeojson();

        expect(geojson).toEqual(expectedGeojson);
    });
    test('read single airspace with single clockwise arc definition', async () => {
        const inputFilepath = './tests/fixtures/airspace-single-arc-clockwise.yaml';
        const expectedGeojson = {
            type: 'FeatureCollection',
            features: [
                {
                    type: 'Feature',
                    properties: {
                        name: 'ABERDEEN CTA',
                        type: 'CTA',
                        class: 'D',
                        upperCeiling: {
                            value: 115,
                            unit: 'FL',
                            referenceDatum: 'STD',
                        },
                        lowerCeiling: {
                            value: 1500,
                            unit: 'FT',
                            referenceDatum: 'MSL',
                        },
                        activatedByNotam: false,
                        activity: 'NONE',
                    },
                    geometry: {
                        type: 'Polygon',
                        coordinates: [
                            [
                                [-1.976388888888889, 57.36472222222223],
                                [-1.976137616714953, 57.36476961917806],
                                [-1.9802991675959791, 57.370807651093656],
                                [-1.9879760659605967, 57.38041743226575],
                                [-1.996761391649096, 57.38974779912101],
                                [-2.0066210921411005, 57.39876170204563],
                                [-2.017516764723316, 57.407423321120795],
                                [-2.0294057997460255, 57.415698211370994],
                                [-2.0422415423557094, 57.42355344283904],
                                [-2.055973472176495, 57.43095773486922],
                                [-2.0705474003105264, 57.43788158399978],
                                [-2.0859056829255787, 57.444297384888955],
                                [-2.1019874505983895, 57.45017954372469],
                                [-2.1187288524851353, 57.45550458359893],
                                [-2.1360633142972523, 57.46025124135936],
                                [-2.153921808972419, 57.46440055548846],
                                [-2.172233138847795, 57.467935944598345],
                                [-2.1909242280666392, 57.47084327617194],
                                [-2.2099204238808636, 57.47311092522494],
                                [-2.229145805451892, 57.47472982261007],
                                [-2.248523498700921, 57.475693492732844],
                                [-2.267975995718022, 57.47599808049859],
                                [-2.287425477207954, 57.47564236736153],
                                [-2.306794136429426, 57.47462777639861],
                                [-2.3260045030741225, 57.47295836638407],
                                [-2.344979765532248, 57.47064081489283],
                                [-2.3636440900025737, 57.46768439051417],
                                [-2.381922934926929, 57.46410091430869],
                                [-2.399743359261462, 57.45990471069301],
                                [-2.41703432313939, 57.455112547986516],
                                [-2.4337269795319627, 57.44974356890257],
                                [-2.4497549555752194, 57.443819211313105],
                                [-2.4650546222992875, 57.437363119659345],
                                [-2.4795653515735006, 57.43040104742332],
                                [-2.4932297591638046, 57.422960751113585],
                                [-2.5059939328877086, 57.41507187625415],
                                [-2.5178076449456137, 57.406765835899044],
                                [-2.5286245476046156, 57.398075682223855],
                                [-2.5384023515109613, 57.38903597177236],
                                [-2.5471029860091505, 57.379682624958456],
                                [-2.554692740948369, 57.370052780443615],
                                [-2.5611423895595182, 57.360184645024944],
                                [-2.56642729208772, 57.350117339682335],
                                [-2.5655555555555556, 57.35],
                                [-1.9672222222222224, 57.35],
                                [-1.976388888888889, 57.36472222222223],
                            ],
                        ],
                    },
                },
            ],
        };

        const converter = new YaixmConverter({ fixGeometries: true, strictSchemaValidation: true });
        await converter.convertFromFile(inputFilepath, { type: 'airspace' });
        const geojson = converter.toGeojson();

        expect(geojson).toEqual(expectedGeojson);
    });
    test('read single airspace with single counter-clockwise arc definition', async () => {
        const inputFilepath = './tests/fixtures/airspace-single-arc-counterclockwise.yaml';
        const expectedGeojson = {
            type: 'FeatureCollection',
            features: [
                {
                    type: 'Feature',
                    properties: {
                        name: 'ABERDEEN CTA',
                        type: 'CTA',
                        class: 'D',
                        upperCeiling: {
                            value: 115,
                            unit: 'FL',
                            referenceDatum: 'STD',
                        },
                        lowerCeiling: {
                            value: 1500,
                            unit: 'FT',
                            referenceDatum: 'MSL',
                        },
                        activatedByNotam: false,
                        activity: 'NONE',
                    },
                    geometry: {
                        type: 'Polygon',
                        coordinates: [
                            [
                                [-2.47986620643497, 57.13607317691522],
                                [-2.417000357943716, 57.03705217873301],
                                [-2.4101726800027747, 57.027440598764976],
                                [-2.402139841320014, 57.017934777733934],
                                [-2.3930306963557735, 57.00872163139205],
                                [-2.3828817511024467, 56.99983728893916],
                                [-2.371733504283718, 56.99131656488864],
                                [-2.359630280759961, 56.983192825574676],
                                [-2.346620051678985, 56.97549786157209],
                                [-2.3327542421507506, 56.96826176646783],
                                [-2.3180875272443835, 56.961512822397054],
                                [-2.3026776171220673, 56.95527739272859],
                                [-2.286585032137529, 56.949579822257036],
                                [-2.2698728687371776, 56.94444234523035],
                                [-2.2526065570099685, 56.939885001512884],
                                [-2.234853610738044, 56.93592556115484],
                                [-2.216683370804501, 56.932579457610316],
                                [-2.198166742817614, 56.9298597298164],
                                [-2.17937592981274, 56.92777697331653],
                                [-2.1603841608942735, 56.92633930058191],
                                [-2.1412654166806133, 56.92555231065529],
                                [-2.1220941524153285, 56.925419068211646],
                                [-2.1029450196077675, 56.92594009210113],
                                [-2.0838925870663316, 56.92711335340955],
                                [-2.06501106218761, 56.92893428304278],
                                [-2.0463740133645794, 56.93139578881132],
                                [-2.0280540943771115, 56.93448828196183],
                                [-2.0101227716280112, 56.938199713073296],
                                [-1.9926500550876713, 56.94251561720516],
                                [-1.975704233810015, 56.947419168156124],
                                [-1.95935161688148, 56.95289124166211],
                                [-1.9436562806632771, 56.95891048733271],
                                [-1.9286798231846176, 56.965453409096405],
                                [-1.9144811265408979, 56.97249445389495],
                                [-1.9011161281455713, 56.9800061083389],
                                [-1.8886376016772979, 56.987959003007056],
                                [-1.877094948554604, 56.996322024044304],
                                [-1.866534000758341, 57.0050624316839],
                                [-1.8569968358072881, 57.014145985292956],
                                [-1.8485216046739892, 57.02353707451242],
                                [-1.841142373405941, 57.033198856036634],
                                [-1.8348889791911849, 57.043093395551985],
                                [-1.8297869015769552, 57.05318181432937],
                                [-1.825857149514875, 57.06342443994189],
                                [-1.8231161648661294, 57.073780960556896],
                                [-1.8215757429547628, 57.084210582230604],
                                [-1.821242970706655, 57.09467218861453],
                                [-1.8221201828556617, 57.105124502465465],
                                [-1.824204936636866, 57.11552624833558],
                                [-1.8274900053198746, 57.125836315805735],
                                [-1.8319633908627535, 57.13601392261457],
                                [-1.8376083558896616, 57.14601877702741],
                                [-1.8386111111111112, 57.145833333333336],
                                [-1.900256110491861, 57.244118733952526],
                                [-1.8966956709731144, 57.23609942020887],
                                [-1.8933702215706172, 57.225792228014875],
                                [-1.891248422959583, 57.215392311606244],
                                [-1.8903376415272686, 57.20494077531071],
                                [-1.8906404454385137, 57.19447889250593],
                                [-1.892154610720877, 57.18404794237898],
                                [-1.8948731462538118, 57.173689047215674],
                                [-1.8987843373082542, 57.16344301085647],
                                [-1.9038718072157301, 57.15335015894334],
                                [-1.910114596684251, 57.14345018156559],
                                [-1.9174872602220043, 57.13378197889596],
                                [-1.9259599790790336, 57.124383510389],
                                [-1.9354986900716897, 57.115291648093006],
                                [-1.9460652296144303, 57.10654203460419],
                                [-1.957617492248318, 57.09816894616899],
                                [-1.970109602925084, 57.09020516141493],
                                [-1.9834921022795482, 57.08268183616572],
                                [-1.9977121441012102, 57.07562838476919],
                                [-2.0127137041975596, 57.069072368339974],
                                [-2.0284377998267895, 57.06303939029104],
                                [-2.044822718865676, 57.05755299950014],
                                [-2.0618042578690896, 57.05263460142845],
                                [-2.0793159681705786, 57.04830337748046],
                                [-2.097289409168229, 57.04457621286429],
                                [-2.115654407936433, 57.04146763318351],
                                [-2.1343393243017132, 57.03898974996083],
                                [-2.153271320519325, 57.037152215266396],
                                [-2.1723766346864863, 57.03596218559188],
                                [-2.191580857027778, 57.03542429508435],
                                [-2.210809208188133, 57.03554063822211],
                                [-2.2299868186688645, 57.03631076198715],
                                [-2.2490390085422605, 57.03773166755816],
                                [-2.2678915665802575, 57.03979782151866],
                                [-2.286471027932702, 57.04250117654587],
                                [-2.3047049494906298, 57.04583120151574],
                                [-2.32252218207, 57.04977492093051],
                                [-2.33985313855151, 57.054316963545375],
                                [-2.3566300571125685, 57.05943962004151],
                                [-2.3727872586885885, 57.065122909563314],
                                [-2.3882613978024905, 57.07134465490823],
                                [-2.402991705904169, 57.07808056612817],
                                [-2.4169202263658036, 57.085304332272806],
                                [-2.429992040284704, 57.092987720975486],
                                [-2.442155482253194, 57.101100685554265],
                                [-2.4533623452652193, 57.10961147927201],
                                [-2.4635680739422803, 57.11848677637151],
                                [-2.472731945277329, 57.12769179947404],
                                [-2.47986620643497, 57.13607317691522],
                            ],
                        ],
                    },
                },
            ],
        };

        const converter = new YaixmConverter({ fixGeometries: true, strictSchemaValidation: true });
        await converter.convertFromFile(inputFilepath, { type: 'airspace' });
        const geojson = converter.toGeojson();

        expect(geojson).toEqual(expectedGeojson);
    });
    test('read single airspace with circle definition', async () => {
        const inputFilepath = './tests/fixtures/airspace-circle.yaml';
        const expectedGeojson = {
            type: 'FeatureCollection',
            features: [
                {
                    type: 'Feature',
                    properties: {
                        name: 'BARKSTON HEATH',
                        type: 'ATZ',
                        class: 'G',
                        upperCeiling: {
                            value: 2367,
                            unit: 'FT',
                            referenceDatum: 'MSL',
                        },
                        lowerCeiling: {
                            value: 0,
                            unit: 'FT',
                            referenceDatum: 'GND',
                        },
                        activatedByNotam: false,
                        activity: 'NONE',
                    },
                    geometry: {
                        type: 'Polygon',
                        coordinates: [
                            [
                                [-0.5602777777777779, 52.99636638182791],
                                [-0.5637529731377505, 52.99630059987986],
                                [-0.5672144218421762, 52.99610351424687],
                                [-0.5706484319878258, 52.995775904526056],
                                [-0.5740414209520791, 52.99531906659544],
                                [-0.5773799694741696, 52.994734807452936],
                                [-0.5806508750683852, 52.99402543802068],
                                [-0.5838412045512327, 52.99319376394385],
                                [-0.5869383454685613, 52.99224307442177],
                                [-0.5899300562135757, 52.99117712911689],
                                [-0.5928045146325275, 52.990000143194806],
                                [-0.5955503649216215, 52.98871677055676],
                                [-0.5981567626262712, 52.9873320853325],
                                [-0.6006134175622314, 52.98585156170882],
                                [-0.6029106344873035, 52.98428105217599],
                                [-0.605039351362164, 52.982626764279836],
                                [-0.6069911750493849, 52.98089523597406],
                                [-0.6087584143108246, 52.97909330967212],
                                [-0.6103341099752009, 52.977228105103485],
                                [-0.6117120621597815, 52.97530699108368],
                                [-0.6128868544426401, 52.9733375563114],
                                [-0.6138538748948001, 52.971327579310184],
                                [-0.614609333894735, 52.96928499763455],
                                [-0.6151502786610603, 52.96721787646404],
                                [-0.6154746044527794, 52.96513437671019],
                                [-0.615581062400054, 52.9630427227632],
                                [-0.6154692639421215, 52.96095117000652],
                                [-0.6151396818625979, 52.95886797222774],
                                [-0.6145936479259416, 52.956801349054764],
                                [-0.6138333471322506, 52.95475945354543],
                                [-0.6128618086207666, 52.95275034005805],
                                [-0.6116828932654292, 52.95078193252907],
                                [-0.6103012780184955, 52.94886199328179],
                                [-0.6087224370705852, 52.94699809248809],
                                [-0.6069526199074897, 52.94519757840223],
                                [-0.6049988263556431, 52.943467548482225],
                                [-0.6028687787192689, 52.9418148215111],
                                [-0.6005708911228667, 52.940245910825865],
                                [-0.5981142361828335, 52.9387669987576],
                                [-0.5955085091416238, 52.937383912381335],
                                [-0.5927639896069052, 52.93610210066909],
                                [-0.589891501046641, 52.93492661313387],
                                [-0.5869023681989175, 52.93386208004642],
                                [-0.5838083725626059, 52.93291269430081],
                                [-0.5806217061416, 52.93208219499811],
                                [-0.5773549236213894, 52.9313738528107],
                                [-0.5740208931620912, 52.930790457183484],
                                [-0.5706327459967865, 52.930334305420395],
                                [-0.5672038250280582, 52.93000719369807],
                                [-0.5637476326190111, 52.929810410040744],
                                [-0.5602777777777779, 52.92974472928319],
                                [-0.5568079229365446, 52.929810410040744],
                                [-0.5533517305274975, 52.93000719369807],
                                [-0.5499228095587692, 52.930334305420395],
                                [-0.5465346623934646, 52.930790457183484],
                                [-0.5432006319341662, 52.9313738528107],
                                [-0.5399338494139557, 52.93208219499811],
                                [-0.5367471829929498, 52.93291269430081],
                                [-0.5336531873566381, 52.93386208004642],
                                [-0.5306640545089147, 52.93492661313387],
                                [-0.5277915659486506, 52.93610210066909],
                                [-0.5250470464139319, 52.937383912381335],
                                [-0.5224413193727222, 52.9387669987576],
                                [-0.519984664432689, 52.940245910825865],
                                [-0.5176867768362867, 52.9418148215111],
                                [-0.5155567291999127, 52.943467548482225],
                                [-0.513602935648066, 52.94519757840223],
                                [-0.5118331184849706, 52.94699809248809],
                                [-0.5102542775370601, 52.94886199328179],
                                [-0.5088726622901264, 52.95078193252907],
                                [-0.5076937469347892, 52.95275034005805],
                                [-0.5067222084233052, 52.95475945354543],
                                [-0.505961907629614, 52.956801349054764],
                                [-0.5054158736929578, 52.95886797222774],
                                [-0.5050862916134341, 52.96095117000652],
                                [-0.5049744931555017, 52.9630427227632],
                                [-0.5050809511027764, 52.96513437671019],
                                [-0.5054052768944953, 52.96721787646404],
                                [-0.5059462216608206, 52.96928499763455],
                                [-0.5067016806607554, 52.971327579310184],
                                [-0.5076687011129156, 52.9733375563114],
                                [-0.5088434933957742, 52.97530699108368],
                                [-0.5102214455803549, 52.977228105103485],
                                [-0.5117971412447311, 52.97909330967212],
                                [-0.5135643805061707, 52.98089523597406],
                                [-0.5155162041933917, 52.982626764279836],
                                [-0.5176449210682522, 52.98428105217599],
                                [-0.5199421379933242, 52.98585156170882],
                                [-0.5223987929292846, 52.9873320853325],
                                [-0.5250051906339341, 52.98871677055676],
                                [-0.5277510409230283, 52.990000143194806],
                                [-0.5306254993419799, 52.99117712911689],
                                [-0.5336172100869944, 52.99224307442177],
                                [-0.536714351004323, 52.99319376394385],
                                [-0.5399046804871704, 52.99402543802068],
                                [-0.543175586081386, 52.994734807452936],
                                [-0.5465141346034765, 52.99531906659544],
                                [-0.5499071235677299, 52.995775904526056],
                                [-0.5533411337133795, 52.99610351424687],
                                [-0.5568025824178051, 52.99630059987986],
                                [-0.5602777777777779, 52.99636638182791],
                            ],
                        ],
                    },
                },
            ],
        };

        const converter = new YaixmConverter({ fixGeometries: true });
        await converter.convertFromFile(inputFilepath, { type: 'airspace' });
        const geojson = converter.toGeojson();

        expect(geojson).toEqual(expectedGeojson);
    });
    test('read single airspace with line definition', async () => {
        const inputFilepath = './tests/fixtures/airspace-single-line.yaml';
        const expectedGeojson = {
            type: 'FeatureCollection',
            features: [
                {
                    type: 'Feature',
                    properties: {
                        name: 'D138D SHOEBURYNESS',
                        type: 'DANGER',
                        class: 'UNCLASSIFIED',
                        upperCeiling: {
                            value: 13000,
                            unit: 'FT',
                            referenceDatum: 'MSL',
                        },
                        lowerCeiling: {
                            value: 0,
                            unit: 'FT',
                            referenceDatum: 'GND',
                        },
                        activatedByNotam: true,
                        activity: 'NONE',
                        remarks: 'NOTAM',
                    },
                    geometry: {
                        type: 'Polygon',
                        coordinates: [
                            [
                                [0.9266666666666666, 51.620555555555555],
                                [0.8333333333333334, 51.620555555555555],
                                [0.8011111111111111, 51.53805555555555],
                                [0.8541666666666666, 51.5025],
                                [0.8833333333333333, 51.5],
                                [1.2008333333333332, 51.620555555555555],
                                [0.9266666666666666, 51.620555555555555],
                            ],
                        ],
                    },
                },
            ],
        };

        const converter = new YaixmConverter({ fixGeometries: false, strictSchemaValidation: true });
        await converter.convertFromFile(inputFilepath, { type: 'airspace' });
        const geojson = converter.toGeojson();

        expect(geojson).toEqual(expectedGeojson);
    });
});

describe('test parsing complete airspace file to GeoJSON file', () => {
    test('convert YAIXM airspace file to GeoJSON file without error', async () => {
        const inputFilepath = './tests/fixtures/airspace.yaml';
        const serviceFilePath = './tests/fixtures/service.yaml';
        const outputGeojsonFilepath = './var/airspace.geojson';

        const converter = new YaixmConverter({ fixGeometries: true, strictSchemaValidation: true, serviceFilePath });
        await converter.convertFromFile(inputFilepath, { type: 'airspace' });
        await converter.toGeojsonFile(outputGeojsonFilepath);

        expect(true).toEqual(true);
    });
});
